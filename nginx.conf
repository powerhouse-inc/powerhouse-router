load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen       ${PORT};
        listen  [::]:${PORT};
        server_name  localhost;

        brotli on;
        brotli_types text/plain text/css application/javascript application/json application/xml application/xml+rss text/javascript;
        brotli_comp_level 6;

        location /powerhouse/switchboard {
            rewrite /(.*) /$1 break;
            proxy_pass ${POWERHOUSE_SWITCHBOARD};
        }

        location /makerdao/switchboard {
            rewrite /(.*) /$1 break;
            proxy_pass ${MAKERDAO_SWITCHBOARD};
        }

        location /arbitrum/switchboard/d/arbitrum2 {
            return 404;
        }

        location /arbitrum/switchboard/d/arbitrum3 {
            return 404;
        }

        location /arbitrum/switchboard {
            rewrite /(.*) /$1 break;
            proxy_pass ${ARBITRUM_SWITCHBOARD};
        }
        location /staging/powerhouse/switchboard {
            rewrite /(.*) /$1 break;
            proxy_pass ${POWERHOUSE_SWITCHBOARD_STAGING};
        }

        location /staging/makerdao/switchboard {
            rewrite /(.*) /$1 break;
            proxy_pass ${MAKERDAO_SWITCHBOARD_STAGING};
        }

        location /staging/arbitrum/switchboard {
            rewrite /(.*) /$1 break;
            proxy_pass ${ARBITRUM_SWITCHBOARD_STAGING};
        }

        location /develop/powerhouse/switchboard {
            rewrite /(.*) /$1 break;
            proxy_pass ${POWERHOUSE_SWITCHBOARD_DEVELOP};
        }

        location /develop/powerhouse/connect {
            rewrite /(.*) /$1 break;
            proxy_pass ${POWERHOUSE_CONNECT_DEVELOP};
        }

        location /powerhouse/connect {
            rewrite /(.*) /$1 break;
            proxy_pass ${POWERHOUSE_CONNECT};
        }

        location /makerdao/connect {
            rewrite /(.*) /$1 break;
            proxy_pass ${MAKERDAO_CONNECT};
        }

        location /arbitrum/connect {
            rewrite /(.*) /$1 break;
            proxy_pass ${ARBITRUM_CONNECT};
        }

        location /staging/powerhouse/connect {
            # rewrite /(.*) /$1 break;
            proxy_pass ${POWERHOUSE_CONNECT_STAGING};
        }

        location /staging/makerdao/connect {
            rewrite /(.*) /$1 break;
            proxy_pass ${MAKERDAO_CONNECT_STAGING};
        }

        location /staging/arbitrum/connect {
            rewrite /(.*) /$1 break;
            proxy_pass ${ARBITRUM_CONNECT_STAGING};
        }

        location /renown {
            rewrite /(.*) /$1 break;
            proxy_pass ${RENOWN};
        }

        location /staging/renown {
            rewrite /(.*) /$1 break;
            proxy_pass ${RENOWN_STAGING};
        }

        # Temporary
        location /feature/websockets/switchboard {
            rewrite /(.*) /$1 break;
            proxy_pass ${PH_WEBSOCKETS_SWITCHBOARD};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location /feature/websockets/connect {
            rewrite /(.*) /$1 break;
            proxy_pass ${PH_WEBSOCKETS_CONNECT};
        }

        location / {
            rewrite /(.*) /$1 break;
            proxy_pass ${FRONTPAGE};
        }

        client_max_body_size 64M;
    }
}
